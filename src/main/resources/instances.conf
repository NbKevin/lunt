master {
  akka {
    remote {
      netty.tcp {
        # host name is intentionally eft blank so akka would determine the local ip address automatically
        # which would serve useful later for peer to register with the master
        hostname = ""
        port = 43650
      }
    }
}
debug = false
test-data = "Y:/mock.data"
}

peer {
akka {
  remote {
    netty.tcp {
      # host name is intentionally left blank so akka would determine the local ip address automatically
      # which would serve useful later for peer to register with the master
      hostname = ""
      port = 0
    }
  }
}
master {
  host = "10.209.26.89"
  name = "master"
  system-name = "lentMaster"
}
debug = false
}

//master {
//  akka {
//    actor {
//      provider = remote
//      warn-about-java-serializer-usage = false
//    }
//    remote {
//      enabled-transports = ["akka.remote.netty.tcp"]
//      netty.tcp {
//        # host name is intentionally eft blank so akka would determine the local ip address automatically
//        # which would serve useful later for peer to register with the master
//        hostname = "127.0.0.1"
//        port = 1370
//      }
//    }
//  }
//}

//peer {
//  akka {
//    actor {
//      provider = remote
//      warn-about-java-serializer-usage = false
//    }
//    remote {
//      enabled-transports = ["akka.remote.netty.tcp"]
//      netty.tcp {
//        # host name is intentionally eft blank so akka would determine the local ip address automatically
//        # which would serve useful later for peer to register with the master
//        hostname = ""
//        port = 0
//      }
//    }
//    serializers {
//      java = "akka.serialization.JavaSerializer"
//      proto = "akka.remote.serialization.ProtobufSerializer"
//    }
//    serialization-bindings {
//      "java.lang.String" = java
//      "docs.serialization.Customer" = java
//      "com.google.protobuf.Message" = proto
//      "e.lent.PeerMessage.IncomingPeerRequest" = proto
//    }
//  }
//}
